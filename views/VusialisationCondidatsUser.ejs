<!doctype html>
<html>
<head>
    <title>DRH - Condidats</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-1.11.1.min.js"></script>
</head>
<body>
    <nav class="navbar bg-secondary">
        <a class="navbar-brand text-light" href="accueil">Accueil</a>
        <button class="btn btn-outline-light my-2 my-sm-0"><a class="text-light" href="/">Déconnecter</a></button>
    </nav>
    <div class="container">
        <div class="py-3"></div>
        <div class="row">
            <div class="col d-flex justify-content-center">
                <button type="button" id="btnaff" class="btn btn-primary mb-3" style="max-width: 25rem; width: 25rem;" data-toggle="modal" data-target="#affcondid_popup" onclick="getSelectesAccounts();" disabled>
                    Affecter les candidats sélectionnées
                </button>
            </div>
        </div>
        <div class="row"  style="overflow-x:auto;">
            <table id="tableID" class="table table-striped table-bordered table-hover" style="width:100%">
                <thead>
                    <tr>
                        <th><input type="checkbox" onclick="checkAll(this)" name="firstcheckbox"></th>
                        <th>#</th>
                        <th>Nom</th>
                        <th>Prénom</th>
                        <th>E-mail</th>
                        <th>Spécialité</th>
                        <th>Diplôme</th>
                        <th>Date d'Obtention</th>
                        <th>Établissement</th>
                        <th>Address</th>
                        <th>Wilaya</th>
                        <th>N° Tél</th>
                        <th>CV</th>
                        <th>Remarques</th>
                        <th>Equipe</th>
                        <th>Diplômes</th>
                        <th>Pièces d'ID</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <% let index_1 = 0; %>
                        <% data.forEach(entry => { %>
                        <% index_1++; %>
                        <td><input type="checkbox" name="<%= entry.IDcondidat %>" onclick="checkCHKBOX();"></td>
                        <td><%= index_1 %></td>
                        <td><%= entry.nomCondidat %></td>
                        <td><%= entry.prenomCondidat %></td>
                        <td><%= entry.emailCondidat %></td>
                        <td><%= entry.specialite %></td>
                        <td><%= entry.diplome %></td>
                        <td><%= entry.dateObtention %></td>
                        <td><%= entry.etablissement %></td>
                        <td><%= entry.adressComplet %></td>
                        <td><%= entry.wilaya %></td>
                        <td><%= entry.numeroTel %></td>
                        <td><a href="<%= entry.pathCV %>">CV</a></td>
                        <td><%= entry.remarques %></td>
                        <td><%= entry.IDequipe %></td>
                        <td id="<%= entry.IDcondidat %>"></td>
                        <td id="<%= entry.IDcondidat * 2 %>"></td>
                    </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
    </div>
    <div class="py-3"></div>
    <div class="py-3"></div>
    <!-- Form 1: affecter condidat -->
    <div class="modal fade" id="affcondid_popup" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Affecter les candidats</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form action="/affectationCondidat" method="POST">
                        <h6>Veuillez choisir en quelle équipe vous voulez affecter les candidats sélectionnés</h6>
                        <h6 class="text-danger">Note: si la capacité de l'équipe choisie ne suffit pas, vous devez soit sortir quelques candidats soit changer d'équipe.</h6>
                        <div class="form-group d-flex">
                            <label class="col-sm-4 col-form-label">Département</label>
                            <select class="custom-select my-1 mr-sm-2" id="selDep" name="selDep" onchange="fetchOtherInfos();" required>
                                <option disabled selected value> Choisir quel département </option>
                                <% data3.forEach(entry => { %>
                                    <option value="<%= entry.nomDepartement %>"><%= entry.nomDepartement %></option>
                                <% }) %>
                            </select>
                        </div>
                        <div class="form-group d-flex">
                            <label class="col-sm-4 col-form-label">Equipe</label>
                            <input type="text" class="form-control rounded-left" id="selE" name="selE" value="" readonly>
                            <input type="hidden" id="selDHidden" name="selDHidden" value="">
                        </div>
                        <div class="form-group d-flex">
                            <label class="col-sm-4 col-form-label">Direction</label>
                            <input type="text" class="form-control rounded-left" id="selDir" value="" readonly>
                        </div>
                        <div class="form-group d-flex">
                            <label class="col-sm-4 col-form-label">Sous Direction</label>
                            <input type="text" class="form-control rounded-left" id="idSD" value="" readonly>
                        </div>
                        <div class="form-group d-flex">
                            <label class="col-sm-4 col-form-label">Capacité Maximal</label>
                            <input type="text" class="form-control rounded-left" id="capaMAX" name="capaMAX" value="" readonly>
                        </div>
                        <div class="form-group d-flex">
                            <label class="col-sm-4 col-form-label">Capacité Actuelle</label>
                            <input type="text" class="form-control rounded-left" id="capaACTUELLE" name="capaACTUELLE" value="" readonly>
                        </div>
                        <input type="hidden" id="hiddenQR" name="hiddenQR" value="">
                        <div class="form-group d-flex">
                            <label class="col-form-label" id="labelvalideteaffectation"></label>
                        </div>
                        <button type="submit" class="form-control btn btn-primary rounded submit px-3" id="afffinalbtn">Affecter</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Annuler</button>
                </div>
            </div>
        </div>
    </div>
</body>
<footer class="fixed-bottom">
    <div class="bg-secondary">
        <div class="footer-copyright text-center py-2 text-light">
            © <script>document.write(new Date().getFullYear())</script> Copyright | Direction des resources Humaine - DRH
        </div>
    </div>
</footer>
<script id="Diplomesdata" type="application/json">
[
<% data2.forEach(entry => { %>
    {"IDcondidat":"<%= entry.IDcondidat %>",
    "pathDiplome":"<%= entry.pathDiplome %>"},
<% }) %>
{}]
</script>
<script id="Propsdata" type="application/json">
[
    <% data3.forEach(entry => { %>
    {"nomDirection":"<%= entry.nomDirection %>",
    "nomSousDirection":"<%= entry.nomSousDirection %>",
    "nomDepartement":"<%= entry.nomDepartement %>",
    "IDequipe":"<%= entry.IDequipe %>",
    "capaciteActuelle":"<%= entry.capaciteActuelle %>",
    "IDdepartement":"<%= entry.IDdepartement %>",
    "capaciteEquipe":"<%= entry.capaciteEquipe %>"},
<% }) %>
{}]
</script>
<script id="PIDsdata" type="application/json">
[
<% data4.forEach(entry => { %>
    {"IDcondidat":"<%= entry.IDcondidat %>",
    "pathPID":"<%= entry.pathPID %>"},
    <% }) %>
{}]
</script>
<script>
// function used to unicode some special caracters when fetch from database
function decodeHTMLEntities(text) {
    let entities = [['amp', '&'],['apos', '\''],['#x27', '\''],['#x2F', '/'],['#39', '\''],['#47', '/'],['lt', '<'],['gt', '>'],['nbsp', ' '],['quot', '"']];
    for (let i = 0, max = entities.length; i < max; ++i) {
        if (text != null){
            text = text.replace(new RegExp('&'+entities[i][0]+';', 'g'), entities[i][1]);
        } else {
            break;
        }
    }
    return text;
};

// this is used to fetch automaticly data from departement to linked directions and sous directions and team
function fetchOtherInfos(){
    let Propsdata = JSON.parse(document.getElementById('Propsdata').innerHTML);
    let selDep = document.getElementById('selDep').value;
    for (let m=0; m< Propsdata.length; m++){
        if (decodeHTMLEntities(Propsdata[m].nomDepartement) === selDep){
            document.getElementById('selE').readonly = false;
            document.getElementById('selE').value = decodeHTMLEntities(Propsdata[m].IDequipe);
            document.getElementById('selE').readonly = true;
            // 
            document.getElementById('selDHidden').value = decodeHTMLEntities(Propsdata[m].IDdepartement);
            // 
            document.getElementById('selDir').readonly = false;
            document.getElementById('selDir').value = decodeHTMLEntities(Propsdata[m].nomDirection);
            document.getElementById('selDir').readonly = true;
            document.getElementById('idSD').readonly = false;
            document.getElementById('idSD').value = decodeHTMLEntities(Propsdata[m].nomSousDirection);
            document.getElementById('idSD').readonly = true;
            document.getElementById('capaMAX').readonly = false;
            document.getElementById('capaMAX').value = decodeHTMLEntities(Propsdata[m].capaciteEquipe);
            document.getElementById('capaMAX').readonly = true;
            document.getElementById('capaACTUELLE').readonly = false;
            document.getElementById('capaACTUELLE').value = decodeHTMLEntities(Propsdata[m].capaciteActuelle);
            document.getElementById('capaACTUELLE').readonly = true;
            let NB_DEMANDEE = [];
            let placesDISPO=0;
            if (decodeHTMLEntities(Propsdata[m].capaciteEquipe) > decodeHTMLEntities(Propsdata[m].capaciteActuelle)) {
                NB_DEMANDEE = document.getElementById('hiddenQR').value.match(/("[^"]+"|[^"\s]+)/g);
                placesDISPO = decodeHTMLEntities(Propsdata[m].capaciteEquipe) - decodeHTMLEntities(Propsdata[m].capaciteActuelle);
                if ( placesDISPO >= NB_DEMANDEE.length){
                    document.getElementById('afffinalbtn').disabled = false;
                    document.getElementById('labelvalideteaffectation').classList.add('text-success');
                    document.getElementById('labelvalideteaffectation').classList.remove('text-danger');
                    document.getElementById('labelvalideteaffectation').innerHTML = "La capacité de l'équipe suffit pour affecter les candidats sélectionnés";
                } else {
                    document.getElementById('afffinalbtn').disabled = true;
                    document.getElementById('labelvalideteaffectation').classList.add('text-danger');
                    document.getElementById('labelvalideteaffectation').classList.remove('text-success');
                    document.getElementById('labelvalideteaffectation').innerHTML = "La capacité de l'équipe que vous avez choisie ne suffit pas pour affecter tous les candidats sélectionnés";
                }
            } else {
                document.getElementById('afffinalbtn').disabled = true;
                document.getElementById('labelvalideteaffectation').classList.add('text-danger');
                document.getElementById('labelvalideteaffectation').classList.remove('text-success');
                document.getElementById('labelvalideteaffectation').innerHTML = "La capacité de l'équipe que vous avez choisie ne suffit pas pour affecter tous les candidats sélectionnés";
            }
        };
    };
};

// this render the links to diplomas of a condidate
let Diplomesdata = JSON.parse(document.getElementById('Diplomesdata').innerHTML);
for (let m=0; m< Diplomesdata.length; m++){
    if (document.getElementById(Diplomesdata[m].IDcondidat) != null){
        document.getElementById(Diplomesdata[m].IDcondidat).innerHTML += "<a href=\""+decodeHTMLEntities(Diplomesdata[m].pathDiplome)+"\">Dip </a>";
    }
};

// this render PDIs of a condidate
let y;
let PIDsdata = JSON.parse(document.getElementById('PIDsdata').innerHTML);
for (let m=0; m< PIDsdata.length; m++){
    y = PIDsdata[m].IDcondidat * 2;
    if (document.getElementById(y) != null){
        document.getElementById(y).innerHTML += "<a href=\""+decodeHTMLEntities(PIDsdata[m].pathPID)+"\">PID </a>";
    }
};
</script>
<script>
    // function to limit showing rows of table
    $(document).ready(function() {
        $('#tableID').DataTable({     
        "aLengthMenu": [[5, 10, 25, -1], [5, 10, 25, "All"]],
        "iDisplayLength": 5});
    });

    // function to check all checkboxes on the table
    function checkAll(bx) {
        var cbs = document.getElementsByTagName('input');
        for(var i=0; i < cbs.length; i++) {
            if(cbs[i].type == 'checkbox') {
            cbs[i].checked = bx.checked;
            }
        }
        checkCHKBOX();
    }

    // function to fill hidden input to pass data to backend
    function getSelectesAccounts(){
        var cbs = document.getElementsByTagName('input');
        document.getElementById('hiddenQR').value = "";
        for(var i=0; i < cbs.length; i++) {
            if(cbs[i].type === 'checkbox' && cbs[i].checked === true) {
                document.getElementById('hiddenQR').value += cbs[i].name+" ";
            }
        }
    }

    // function that enable click on affect button
    function checkCHKBOX(){
        var cbs = document.getElementsByTagName('input');
        let affpossible = false;
        for(var i=0; i < cbs.length; i++) {
            if(cbs[i].type == 'checkbox' && cbs[i].checked === true && cbs[i].name != 'firstcheckbox') {
                affpossible = true;
                break;
            }
        }
        if (affpossible == true){
            document.getElementById('btnaff').disabled = false;
        } else {
            document.getElementById('btnaff').disabled = true;
        }
    }
</script>
<script src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.16/js/dataTables.bootstrap4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.3/dist/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>    
</html>